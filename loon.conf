# Loon自用配置
# 故障转移(fallback：按顺序选择可用的策略中最靠前的策略,可调小timeout(测试等待的最长时间)参数让缓慢线路标记为不可用)
# 负载均衡(URL:测试链接配置,URL后会测试性检查,仅从可用的子策略中选取可用的策略)
# 注意事项: 以下内容中，带“#”开头的行都是注释，去掉注释符号该行才有效

# =====================================
# General
# =====================================  
[General]  
ip-mode = v4-only
ipv6-vif = off
# > DNS 服务器
dns-server = system
# >
sni-sniffing = true
disable-stun = false
dns-reject-mode = LoopbackIP
domain-reject-mode = DNS
udp-fallback-mode = REJECT
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
allow-wifi-access = false
# >
interface-mode = auto
# > 测速超时 (s)
test-timeout = 2
# >
disconnect-on-policy-change = false 
switch-node-after-failure-times = 3
# > 代理测速 URL
internet-test-url = http://connectivitycheck.platform.hicloud.com/generate_204
proxy-test-url = http://www.gstatic.com/generate_204  
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
#real-ip=msftconnecttest.com,msftncsi.com,*.msftconnecttest.com,*.msftncsi.com,*.srv.nintendo.net,*.stun.playstation.net,xbox.*.microsoft.com,*.xboxlive.com,*.battlenet.com.cn,*.battlenet.com,*.blzstatic.cn,*.battle.net                  
# 解析器
resource-parser = https://raw.githubusercontent.com/sub-store-org/Sub-Store/release/sub-store-parser.loon.min.js    
# geoip
geoip-url = https://geodata.kelee.one/Country-Masaiki.mmdb
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy       
ipasn-url = https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb                          
# > 跳过某个域名或者IP段
skip-proxy = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, localhost, *.local, e.crashlynatics.com
bypass-tun = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32 

# =====================================  
# 👇本地代理节点
# =====================================  
[Proxy]

# =====================================  
# 👇在线节点订阅链接
# =====================================  
[Remote Proxy]

#======================================#  
# 👇策略过滤筛选
# 筛选节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 全部_节点 = NameRegex, FilterKey = "|"    
# 全部节点(排除网易云音乐节点)
[Remote Filter]  
全部_节点 = NameRegex, FilterKey = "^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel)\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$"
游戏_节点 = NameRegex, FilterKey = "^(?=.*((?i)游戏|🎮|(\b(GAME)(\d+)?\b)))(?!.*((?i)回国|校园)).*$"
香港_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇭🇰|香|港|香港|香江|香岛|湾仔|港仔|九龙|铜锣湾|旺角|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
台湾_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇹🇼|台|台湾|台北|新北|桃园|台中|台南|高雄|基隆|新竹|嘉义|苗栗|彰化|南投|云林|屏东|台东|花莲|宜兰|澎湖|金门|连江|(\b(TW|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
新加坡_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇸🇬|新加坡|新|狮|獅|坡|新加坡|星|星加坡|星洲|新加坡|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
澳门_节点 = NameRegex, FilterKey = "(?i)(🇲🇴|澳门|MO)"
日本_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|名古屋|福冈|仙台|京都|(\b(JP|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
韩国_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇰🇷|韩国|韓|首尔南韩|南朝鲜|高丽|大韩民国|首尔|世宗|济州市|水原|釜山|大邱|仁川|光州|大田|蔚山|(\b(KR|Korea|Korean|South Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
美国_节点 = NameRegex, FilterKey = "^(?=.*((?i)🇺🇸|美|美国|美利坚合众国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|华盛顿|内华达|蒙大纳|怀俄明州|菲尼克斯|阿尔伯克基|丹佛|(\b(US|United States|States|American)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$"
# =====================================  
# 策略组
# =====================================  
[Proxy Group]     
# --------------------------------  
# 👇手动选择APP节点                    
全部节点 = select,DIRECT,全部_节点,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
延迟最低 = url-test,全部_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png
策略选择 = select,延迟最低,全部节点,负载均衡,故障转移,香港节点,台湾节点,澳门节点,日本节点,韩国节点,新加坡节点,美国节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Back.png
境外网站 = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://ghproxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
游戏手动 = select,游戏_节点,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png
TikTok = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/chxm1023/Script_X/main/icon/TikTok_1.png
大陆抖音 = select,DIRECT,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok_2.png
港台番剧 = select,DIRECT,台湾节点,香港节点,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingSE.png
人工智能 = select,延迟最低,香港节点,台湾节点,日本节点,韩国节点,新加坡节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/chxm1023/Script_X/main/icon/ChatGPT/ChatGPT4.png
Github = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png
Google = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
YouTube = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
Telegram = select,延迟最低,香港节点,台湾节点,日本节点,韩国节点,新加坡节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
Discord = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Discord.png
Instagram = select,延迟最低,香港节点,台湾节点,日本节点,韩国节点,新加坡节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png
Facebook = select,延迟最低,香港节点,台湾节点,日本节点,韩国节点,新加坡节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Facebook.png
Spotify = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
Twitter = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png
Netflix = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix_Letter.png
Disney = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney+.png
Emby = select,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png
Apple = select,DIRECT,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://ghproxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
Microsoft = select,DIRECT,延迟最低,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,全部节点,策略选择,img-url = https://ghproxy.com/https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
# --------------------------------  
# 👇手动选择地区节点
香港节点 = select,香港延迟最低,香港故障转移,香港负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
台湾节点 = select,台湾延迟最低,台湾故障转移,台湾负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
新加坡节点 = select,新加坡延迟最低,新加坡故障转移,新加坡负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
澳门节点 = select,澳门延迟最低,澳门故障转移,澳门负载均衡,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/Flag_icon/120px/MO.png
日本节点 = select,日本延迟最低,日本故障转移,日本负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
韩国节点 = select,韩国延迟最低,韩国故障转移,韩国负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
美国节点 = select,美国延迟最低,美国故障转移,美国负载均衡,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
# --------------------------------  
# 👇自动选择延迟最低节点
# 时延优选（URL：http://cp.cloudflare.com/generate_204测试链接）                                                                                                        
香港延迟最低 = url-test,香港_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
台湾延迟最低 = url-test,台湾_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png    
新加坡延迟最低 = url-test,新加坡_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
澳门延迟最低 = url-test,澳门_节点,url = http://cp.cloudflare.com/generate_204,interval = 60,tolerance = 50,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/Flag_icon/120px/MO.png
日本延迟最低 = url-test,日本_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
韩国延迟最低 = url-test,韩国_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
美国延迟最低 = url-test,美国_节点,interval = 60,tolerance = 50,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png  
# --------------------------------  
# 👇故障转移(fallback：按顺序选择可用的策略中最靠前的策略,可调小timeout(测试等待的最长时间)参数让缓慢线路标记为不可用)
故障转移 = fallback,全部_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
香港故障转移 = fallback,香港_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png  
台湾故障转移 = fallback,台湾_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
新加坡故障转移 = fallback,新加坡_节点,interval = 60,max-timeout = 2000,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/Flag_icon/120px/MO.png  
澳门故障转移 = fallback,澳门_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
日本故障转移 = fallback,日本_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
韩国故障转移 = fallback,韩国_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
美国故障转移 = fallback,美国_节点,interval = 60,max-timeout = 2000,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
# --------------------------------  
# 👇负载均衡(URL:测试链接配置,URL后会测试性检查,仅从可用的子策略中选取可用的策略)
#圈X配置要加上测试连接,位置如：负载均衡=load-balance,全部_节点,url=http://cp.cloudflare.com/generate_204        
负载均衡 = load-balance,全部_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png  
香港负载均衡 = load-balance,香港_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
台湾负载均衡 = load-balance,台湾_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png  
新加坡负载均衡 = load-balance,新加坡_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png      
澳门负载均衡 = load-balance,澳门_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/Flag_icon/120px/MO.png
日本负载均衡 = load-balance,日本_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png  
韩国负载均衡 = load-balance,韩国_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png  
美国负载均衡 = load-balance,美国_节点,interval = 60,max-timeout = 2000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
# --------------------------------  
# SSID地区场景策略("PHICOMM_5G" 均要改为自家WiFi名称)
#香港场景=ssid,default=香港节点,cellular=香港节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png            
#台湾场景=ssid,default=台湾节点,cellular=台湾节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png      
#日本场景=ssid,default=日本节点,cellular=日本节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png  
#韩国场景=ssid,default=韩国节点,cellular=韩国节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png  
#新加坡场景=ssid,default=新加坡节点,cellular=新加坡节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png      
#美国场景=ssid,default=美国节点,cellular=美国节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png    
#游戏场景=ssid,default=游戏手动,cellular=游戏手动,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png  
#手动场景=ssid,default=全部节点,cellular=全部节点,"PHICOMM_5G"=DIRECT,img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SSID.png  
# --------------------------------   
# 👇兜底策略后备(fallback：按顺序选择可用的策略中最靠前的策略,可调小timeout参数让缓慢线路标记为不可用)
兜底后备 = fallback,DIRECT,延迟最低,负载均衡,故障转移,香港节点,台湾节点,新加坡节点,澳门节点,日本节点,韩国节点,美国节点,interval = 60,max-timeout = 2000,img-url = https://github.com/shindgewongxj/WHATSINStash/raw/main/icon/fallback.png

#======================================#  
#👇本地规则分流
#======================================#  
[Rule]
# Local Rule
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR,IP-CIDR6,IP-ASN
# Strategy:DIRECT,Proxy,REJECT  
# Options:no-resolve(no-resolve(only for cidr))
# IP-CIDR,192.168.0.0/16,DIRECT
# IP-CIDR,10.0.0.0/8,DIRECT
# IP-CIDR,172.16.0.0/12,DIRECT
# IP-CIDR,127.0.0.0/8,DIRECT
# 配置文件已自带远程GEOIP,cn,DIRECT规则，请勿在此添加
# 请勿修改远程CN REGION规则的排序甚至删除
# 不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 兜底后备, 请根据自己的需求来选择直连或节点、策略
IP-CIDR,28.0.0.1/8,DIRECT
IP-CIDR,198.18.0.1/16,DIRECT
IP-CIDR,198.18.0.0/15,DIRECT
IP-CIDR6,fc00::/18,DIRECT
FINAL,兜底后备

#======================================#  
# 👇远程分流规则
#======================================#  
[Remote Rule]
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/BanAD.list, policy=REJECT, tag=去广告规则-无副作用, enabled=true
https://kelee.one/Tool/Loon/Rule/AI.list, policy=人工智能, tag=AI, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/XiaoHongShu/XiaoHongShu.list, policy=DIRECT, tag=小红书, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/WeChat/WeChat.list, policy=DIRECT, tag=微信直连, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/DouYin/DouYin.list, policy=大陆抖音, tag=DouYin, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/ByteDance/ByteDance.list, policy=大陆抖音, tag=字节跳动, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/rule/OKX.list, policy=新加坡节点, tag=欧易分流, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/rule/Binance.list, policy=新加坡节点, tag=币安分流, enabled=true
https://rule.kelee.one/Loon/Threads.list, policy=香港节点, tag=Threads, enabled=true
https://rule.kelee.one/Loon/BiliBili.list, policy=港台番剧, tag=BiliBili.list, enabled=true
https://rule.kelee.one/Loon/GitHub.list, policy=Github, tag=GitHub.list, enabled=true
https://rule.kelee.one/Loon/Steam.list, policy=延迟最低, tag=Steam.list, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Discord/Discord.list, policy=Discord, tag=Discord, enabled=true
https://kelee.one/Tool/Loon/Rule/TikTok.list, policy=TikTok, tag=TikTok, enabled=true
https://rule.kelee.one/Loon/Netflix.list, policy=Netflix, tag=Netflix, enabled=true
https://rule.kelee.one/Loon/YouTube.list, policy=YouTube, tag=Youtube, enabled=true
https://rule.kelee.one/Loon/Disney.list, policy=Disney, tag=Disney, enabled=true
https://rule.kelee.one/Loon/Twitter.list, policy=Twitter, tag=Twitter, enabled=true
https://rule.kelee.one/Loon/Facebook.list, policy=Facebook, tag=Facebook, enabled=true
https://rule.kelee.one/Loon/Instagram.list, policy=Instagram, tag=Instagram, enabled=true
https://rule.kelee.one/Loon/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://rule.kelee.one/Loon/Google.list, policy=Google, tag=Google, enabled=true
https://rule.kelee.one/Loon/OneDrive.list, policy=香港节点, tag=OneDrive, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/AppleID/AppleID.list, policy=Apple, tag=Apple, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=Apple, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Apple/Apple_Domain.list, policy=Apple, tag=Apple域名补充, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=Microsoft, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Global/Global.list, policy=境外网站, tag=境外域名, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Loon/Global/Global_Domain.list, policy=境外网站, tag=境外域名补充, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/rule/LAN.list, policy=DIRECT, tag=LAN, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/rule/GeoIP_CN.list, policy=DIRECT, tag=大陆网站, enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ChinaDomain.list, policy=DIRECT, tag=国内常见域名、直连CDN, enabled=true
https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ChinaIp.list, policy=DIRECT, tag=IPIP国内地址段, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list, policy=DIRECT, tag=按ASN分流中国大陆IP与域名直连, enabled=true

#======================================#  
# 👇Host
# 可以指定一下四种模式：
# 1、指定域名使用对应的IP地址
# 2、将域名指向另一个域名
# 3、指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
# 4、指定具体的SSID环境下使用特定的DNS服务器，格式为：ssid:PHICOMM_5G=server:10.0.0.1  "PHICOMM_5G"为个人wifi "10.0.0.1"为WiFi IP
#======================================#  
[Host]

#======================================#  
# 👇本地重写
#======================================# 
[Rewrite]

#======================================#
# 👇本地脚本
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# generic  通用型脚本，可用在操作节点/策略组中，执行是会带入节点名称和策略组名称，脚本必须在开启NE时
#======================================#
[Script]

#======================================#
# 👇远程脚本
#======================================#  
[Remote Script]

#======================================#  
# 👇插件资源
#======================================#
[Plugin]
https://github.com/fmz200/wool_scripts/raw/main/Loon/plugin/blockAds.plugin, enabled=true
https://kelee.one/Tool/Loon/Plugin/SevenCat_remove_ads.plugin, enabled=true
https://kelee.one/Tool/Loon/Plugin/DragonRead_remove_ads.plugin, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/plugin/cookies.plugin, enabled=false
https://github.com/fmz200/wool_scripts/raw/main/Loon/plugin/weibo.plugin, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/plugin/WexinMiniPrograms_Remove_ads.plugin, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/spotify.png, enabled=true
https://github.com/fmz200/wool_scripts/raw/main/Loon/plugin/Auto_Join_TF.plugin, policy=策略选择, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/skip-proxy.plugin, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Alpha/Imm.png, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/HTTPDNS.Block.plugin, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=策略选择, enabled=true
https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/Loon.plugin, policy=策略选择, enabled=true
https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/modules/script-hub.loon.plugin, policy=策略选择, enabled=true
[Mitm]
hostname=
ca-p12=
ca-passphrase=
skip-server-cert-verify=false
